// Stub class generated by rmic, do not edit.
// Contents subject to change without notice.

package javax.management.remote.rmi;

public final class RMIServerImpl_Stub
    extends java.rmi.server.RemoteStub
    implements RMIServer
{
    private static final long serialVersionUID = 2;
    
    private static java.lang.reflect.Method $method_getVersion_0;
    private static java.lang.reflect.Method $method_newClient_1;
    
    static {
	try {
	    $method_getVersion_0 = RMIServer.class.getMethod("getVersion", new Class[] {});
	    $method_newClient_1 = RMIServer.class.getMethod("newClient", new Class[] {Object.class});
	} catch (NoSuchMethodException e) {
	    throw new NoSuchMethodError(
		"stub class initialization failed");
	}
    }
    
    // constructors
    public RMIServerImpl_Stub(java.rmi.server.RemoteRef ref) {
	super(ref);
    }
    
    // methods from remote interfaces
    
    // implementation of getVersion()
    public String getVersion()
	throws java.rmi.RemoteException
    {
	try {
	    Object $result = ref.invoke(this, $method_getVersion_0, null, -8081107751519807347L);
	    return ((String) $result);
	} catch (RuntimeException e) {
	    throw e;
	} catch (java.rmi.RemoteException e) {
	    throw e;
	} catch (Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
    
    // implementation of newClient(Object)
    public RMIConnection newClient(Object $param_Object_1)
	throws java.io.IOException
    {
	try {
	    Object $result = ref.invoke(this, $method_newClient_1, new Object[] {$param_Object_1}, -1089742558549201240L);
	    return ((RMIConnection) $result);
	} catch (RuntimeException e) {
	    throw e;
	} catch (java.io.IOException e) {
	    throw e;
	} catch (Exception e) {
	    throw new java.rmi.UnexpectedException("undeclared checked exception", e);
	}
    }
}
